name: CloudcorePipeline IAC

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
env:
  # credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the terraform state.
  BUCKET_TF_STATE: ${{ secrets.BUCKET_NAME }}
  AWS_REGION: ap-south-1

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Check AWS CLI version
        run: aws --version

      - name: Verify AWS CLI configuration
        run: |
          aws configure list
              echo "Checking AWS CLI version..."
              aws --version || (echo "AWS CLI not found" && exit 1)

      - name: Test AWS CLI connectivity
        run: |
          echo "Testing AWS CLI connectivity..."
          aws sts get-caller-identity --debug || (echo "Failed to connect to AWS" && exit 1)

      - name: Debug AWS CLI Authentication
        run: aws sts get-caller-identity --debug

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init 

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve